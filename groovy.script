def s3Download(){
   sh "curl -o ${params.Release}.tar.gz https://download.maxmind.com/app/geoip_download?edition_id=${params.Release}\\&license_key=uPyhVG4SoAOA\\&suffix=tar.gz"
   echo "Release ${params.Release} downloaded"
   }
def releaseExtract(){
   sh "tar -zxvf ${params.Release}.tar.gz"
   sh "rm -f ${params.Release}.tar.gz"
   echo "Release ${params.Release} extracted"
   }
def uploadCity(){
   echo "Release ${params.Release} uploaded"
   sh "ls -la ${params.Release}*/${params.Release}.mmdb"
   }
def uploadCountry(){
   sh "ls -la ${params.Release}*/${params.Release}.mmdb"
   }
def uploadASN(){
   sh "ls -la ${params.Release}*/${params.Release}.mmdb"
   }
def serverDeploy(){
   abcs = ['192.168.115.246', '127.0.0.1', 'localhost']
   if ("${params.Release}" == "GeoLite2-City") { 
   sh "ls -la ${params.Release}*/${params.Release}.mmdb"
    echo_all0(abcs)
    echo_all1(abcs)
    echo_all2(abcs)
   }else{
   sh "echo Hello world"
   }
   }
 def revokeDeploy(){
    sh "${MAN}"
   }
 
@NonCPS // has to be NonCPS or the build breaks on the call to .each
def echo_all0(list) {
    for (int i = 0; i < list.size(); i++) {
        sh """ssh -t -o StrictHostKeyChecking=no -o 'UserKnownHostsFile /dev/null' -i /var/lib/jenkins/.ssh/id_rsa root@${list[0]}  "\$(cat <<'ENDSSH'
                   date 
           cd /tmp
           pwd
           echo Hello ${params.Release}
ENDSSH
)"
"""
     }
    }
@NonCPS 
def echo_all1(list) {
    for (int i = 0; i < list.size(); i++) {
        sh "ssh -t -o StrictHostKeyChecking=no -o 'UserKnownHostsFile /dev/null' -i /var/lib/jenkins/.ssh/id_rsa root@${list[1]}  echo Hello world "
     }
    }
@NonCPS 
def echo_all2(list) {
    for (int i = 0; i < list.size(); i++) {
        sh "ssh -t -o StrictHostKeyChecking=no -o 'UserKnownHostsFile /dev/null' -i /var/lib/jenkins/.ssh/id_rsa root@${list[2]}  echo Hello world "
     }
    }
return this

